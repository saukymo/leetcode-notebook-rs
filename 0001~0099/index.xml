<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>0001~0099s on LeetCode NoteBook</title><link>//blog.mkdef.com/leetcode-notebook-rs/0001~0099/</link><description>Recent content in 0001~0099s on LeetCode NoteBook</description><generator>Hugo -- gohugo.io</generator><language>zh-hans</language><atom:link href="//blog.mkdef.com/leetcode-notebook-rs/0001~0099/index.xml" rel="self" type="application/rss+xml"/><item><title>0001.Two Sum</title><link>//blog.mkdef.com/leetcode-notebook-rs/0001~0099/0001.Two-Sum/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>//blog.mkdef.com/leetcode-notebook-rs/0001~0099/0001.Two-Sum/</guid><description>1. Two Sum # 题目 # Given an array of integers, return indices of the two numbers such that they add up to a specific target.
You may assume that each input would have exactly one solution, and you may not use the same element twice.
Example:
Given nums = [2, 7, 11, 15], target = 9, Because nums[0] + nums[1] = 2 + 7 = 9, return [0, 1] 代码 # use std::collections::HashMap; impl Solution { pub fn two_sum(nums: Vec&amp;lt;i32&amp;gt;, target: i32) -&amp;gt; Vec&amp;lt;i32&amp;gt; { let mut numbers: HashMap&amp;lt;i32, i32&amp;gt; = HashMap::new(); for (idx, value) in nums.</description></item><item><title>0004.Median Of Two Sorted Arrays</title><link>//blog.mkdef.com/leetcode-notebook-rs/0001~0099/0004.Median-Of-Two-Sorted-Arrays/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>//blog.mkdef.com/leetcode-notebook-rs/0001~0099/0004.Median-Of-Two-Sorted-Arrays/</guid><description>4. Median Of Two Sorted Arrays # 题目 # Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays.
The overall run time complexity should be O(log(m+n)).
Example 1:
Input: nums1 = [1,3], nums2 = [2] Output: 2.00000 Explanation: merged array = [1,2,3] and median is 2. Example 2:
Input: nums1 = [1,2], nums2 = [3,4] Output: 2.</description></item><item><title>0009.Palindrome Number</title><link>//blog.mkdef.com/leetcode-notebook-rs/0001~0099/0009.Palindrome-Number/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>//blog.mkdef.com/leetcode-notebook-rs/0001~0099/0009.Palindrome-Number/</guid><description>9. Palindrome Number # 题目 # Given an integer x, return true if x is palindrome integer. An integer is a palindrome when it reads the same backward as forward. For example, 121 is a palindrome while 123 is not.
Example 1:
Input: x = 121 Output: true Explanation: 121 reads as 121 from left to right and from right to left. Example 2:
Input: x = -121 Output: false Explanation: From left to right, it reads -121.</description></item><item><title>0023.Merge K Sorted Lists</title><link>//blog.mkdef.com/leetcode-notebook-rs/0001~0099/0023.Merge-K-Sorted-Lists/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>//blog.mkdef.com/leetcode-notebook-rs/0001~0099/0023.Merge-K-Sorted-Lists/</guid><description>23.Merge K Sorted Lists # 题目 # You are given an array of k linked-lists lists, each linked-list is sorted in ascending order. Merge all the linked-lists into one sorted linked-list and return it.
Example 1:
Input: lists = [[1,4,5],[1,3,4],[2,6]] Output: [1,1,2,3,4,4,5,6] Explanation: The linked-lists are: [ 1-&amp;gt;4-&amp;gt;5, 1-&amp;gt;3-&amp;gt;4, 2-&amp;gt;6 ] merging them into one sorted list: 1-&amp;gt;1-&amp;gt;2-&amp;gt;3-&amp;gt;4-&amp;gt;4-&amp;gt;5-&amp;gt;6 Example 2:
Input: lists = [] Output: [] Example 3:</description></item></channel></rss>